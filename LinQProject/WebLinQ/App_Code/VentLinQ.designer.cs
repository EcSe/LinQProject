#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BDVentas")]
public partial class VentLinQDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Definiciones de métodos de extensibilidad
  partial void OnCreated();
  partial void InsertTBoleta(TBoleta instance);
  partial void UpdateTBoleta(TBoleta instance);
  partial void DeleteTBoleta(TBoleta instance);
  partial void InsertTCategoria(TCategoria instance);
  partial void UpdateTCategoria(TCategoria instance);
  partial void DeleteTCategoria(TCategoria instance);
  partial void InsertTCliente(TCliente instance);
  partial void UpdateTCliente(TCliente instance);
  partial void DeleteTCliente(TCliente instance);
  partial void InsertTDetalle(TDetalle instance);
  partial void UpdateTDetalle(TDetalle instance);
  partial void DeleteTDetalle(TDetalle instance);
  partial void InsertTProducto(TProducto instance);
  partial void UpdateTProducto(TProducto instance);
  partial void DeleteTProducto(TProducto instance);
  partial void InsertTVendedor(TVendedor instance);
  partial void UpdateTVendedor(TVendedor instance);
  partial void DeleteTVendedor(TVendedor instance);
  #endregion
	
	public VentLinQDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BDVentasConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public VentLinQDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VentLinQDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VentLinQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public VentLinQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TBoleta> TBoleta
	{
		get
		{
			return this.GetTable<TBoleta>();
		}
	}
	
	public System.Data.Linq.Table<TCategoria> TCategoria
	{
		get
		{
			return this.GetTable<TCategoria>();
		}
	}
	
	public System.Data.Linq.Table<TCliente> TCliente
	{
		get
		{
			return this.GetTable<TCliente>();
		}
	}
	
	public System.Data.Linq.Table<TDetalle> TDetalle
	{
		get
		{
			return this.GetTable<TDetalle>();
		}
	}
	
	public System.Data.Linq.Table<TProducto> TProducto
	{
		get
		{
			return this.GetTable<TProducto>();
		}
	}
	
	public System.Data.Linq.Table<TVendedor> TVendedor
	{
		get
		{
			return this.GetTable<TVendedor>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBoleta")]
public partial class TBoleta : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _NroBoleta;
	
	private System.DateTime _Fecha;
	
	private string _CodCliente;
	
	private string _CodVendedor;
	
	private bool _Anulado;
	
	private EntitySet<TDetalle> _TDetalle;
	
	private EntityRef<TCliente> _TCliente;
	
	private EntityRef<TVendedor> _TVendedor;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroBoletaChanging(string value);
    partial void OnNroBoletaChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnCodClienteChanging(string value);
    partial void OnCodClienteChanged();
    partial void OnCodVendedorChanging(string value);
    partial void OnCodVendedorChanged();
    partial void OnAnuladoChanging(bool value);
    partial void OnAnuladoChanged();
    #endregion
	
	public TBoleta()
	{
		this._TDetalle = new EntitySet<TDetalle>(new Action<TDetalle>(this.attach_TDetalle), new Action<TDetalle>(this.detach_TDetalle));
		this._TCliente = default(EntityRef<TCliente>);
		this._TVendedor = default(EntityRef<TVendedor>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroBoleta", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string NroBoleta
	{
		get
		{
			return this._NroBoleta;
		}
		set
		{
			if ((this._NroBoleta != value))
			{
				this.OnNroBoletaChanging(value);
				this.SendPropertyChanging();
				this._NroBoleta = value;
				this.SendPropertyChanged("NroBoleta");
				this.OnNroBoletaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
	public System.DateTime Fecha
	{
		get
		{
			return this._Fecha;
		}
		set
		{
			if ((this._Fecha != value))
			{
				this.OnFechaChanging(value);
				this.SendPropertyChanging();
				this._Fecha = value;
				this.SendPropertyChanged("Fecha");
				this.OnFechaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
	public string CodCliente
	{
		get
		{
			return this._CodCliente;
		}
		set
		{
			if ((this._CodCliente != value))
			{
				if (this._TCliente.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCodClienteChanging(value);
				this.SendPropertyChanging();
				this._CodCliente = value;
				this.SendPropertyChanged("CodCliente");
				this.OnCodClienteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodVendedor", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
	public string CodVendedor
	{
		get
		{
			return this._CodVendedor;
		}
		set
		{
			if ((this._CodVendedor != value))
			{
				if (this._TVendedor.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCodVendedorChanging(value);
				this.SendPropertyChanging();
				this._CodVendedor = value;
				this.SendPropertyChanged("CodVendedor");
				this.OnCodVendedorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anulado", DbType="Bit NOT NULL")]
	public bool Anulado
	{
		get
		{
			return this._Anulado;
		}
		set
		{
			if ((this._Anulado != value))
			{
				this.OnAnuladoChanging(value);
				this.SendPropertyChanging();
				this._Anulado = value;
				this.SendPropertyChanged("Anulado");
				this.OnAnuladoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBoleta_TDetalle", Storage="_TDetalle", ThisKey="NroBoleta", OtherKey="NroBoleta")]
	public EntitySet<TDetalle> TDetalle
	{
		get
		{
			return this._TDetalle;
		}
		set
		{
			this._TDetalle.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCliente_TBoleta", Storage="_TCliente", ThisKey="CodCliente", OtherKey="CodCliente", IsForeignKey=true)]
	public TCliente TCliente
	{
		get
		{
			return this._TCliente.Entity;
		}
		set
		{
			TCliente previousValue = this._TCliente.Entity;
			if (((previousValue != value) 
						|| (this._TCliente.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TCliente.Entity = null;
					previousValue.TBoleta.Remove(this);
				}
				this._TCliente.Entity = value;
				if ((value != null))
				{
					value.TBoleta.Add(this);
					this._CodCliente = value.CodCliente;
				}
				else
				{
					this._CodCliente = default(string);
				}
				this.SendPropertyChanged("TCliente");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TVendedor_TBoleta", Storage="_TVendedor", ThisKey="CodVendedor", OtherKey="CodVendedor", IsForeignKey=true)]
	public TVendedor TVendedor
	{
		get
		{
			return this._TVendedor.Entity;
		}
		set
		{
			TVendedor previousValue = this._TVendedor.Entity;
			if (((previousValue != value) 
						|| (this._TVendedor.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TVendedor.Entity = null;
					previousValue.TBoleta.Remove(this);
				}
				this._TVendedor.Entity = value;
				if ((value != null))
				{
					value.TBoleta.Add(this);
					this._CodVendedor = value.CodVendedor;
				}
				else
				{
					this._CodVendedor = default(string);
				}
				this.SendPropertyChanged("TVendedor");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TDetalle(TDetalle entity)
	{
		this.SendPropertyChanging();
		entity.TBoleta = this;
	}
	
	private void detach_TDetalle(TDetalle entity)
	{
		this.SendPropertyChanging();
		entity.TBoleta = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TCategoria")]
public partial class TCategoria : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CodCategoria;
	
	private string _Nombre;
	
	private string _CategoriaPadre;
	
	private EntitySet<TCategoria> _TCategoria2;
	
	private EntitySet<TProducto> _TProducto;
	
	private EntityRef<TCategoria> _TCategoria1;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodCategoriaChanging(string value);
    partial void OnCodCategoriaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCategoriaPadreChanging(string value);
    partial void OnCategoriaPadreChanged();
    #endregion
	
	public TCategoria()
	{
		this._TCategoria2 = new EntitySet<TCategoria>(new Action<TCategoria>(this.attach_TCategoria2), new Action<TCategoria>(this.detach_TCategoria2));
		this._TProducto = new EntitySet<TProducto>(new Action<TProducto>(this.attach_TProducto), new Action<TProducto>(this.detach_TProducto));
		this._TCategoria1 = default(EntityRef<TCategoria>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCategoria", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CodCategoria
	{
		get
		{
			return this._CodCategoria;
		}
		set
		{
			if ((this._CodCategoria != value))
			{
				this.OnCodCategoriaChanging(value);
				this.SendPropertyChanging();
				this._CodCategoria = value;
				this.SendPropertyChanged("CodCategoria");
				this.OnCodCategoriaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoriaPadre", DbType="VarChar(4)")]
	public string CategoriaPadre
	{
		get
		{
			return this._CategoriaPadre;
		}
		set
		{
			if ((this._CategoriaPadre != value))
			{
				if (this._TCategoria1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCategoriaPadreChanging(value);
				this.SendPropertyChanging();
				this._CategoriaPadre = value;
				this.SendPropertyChanged("CategoriaPadre");
				this.OnCategoriaPadreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategoria_TCategoria", Storage="_TCategoria2", ThisKey="CodCategoria", OtherKey="CategoriaPadre")]
	public EntitySet<TCategoria> TCategoria2
	{
		get
		{
			return this._TCategoria2;
		}
		set
		{
			this._TCategoria2.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategoria_TProducto", Storage="_TProducto", ThisKey="CodCategoria", OtherKey="CodCategoria")]
	public EntitySet<TProducto> TProducto
	{
		get
		{
			return this._TProducto;
		}
		set
		{
			this._TProducto.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategoria_TCategoria", Storage="_TCategoria1", ThisKey="CategoriaPadre", OtherKey="CodCategoria", IsForeignKey=true)]
	public TCategoria TCategoria1
	{
		get
		{
			return this._TCategoria1.Entity;
		}
		set
		{
			TCategoria previousValue = this._TCategoria1.Entity;
			if (((previousValue != value) 
						|| (this._TCategoria1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TCategoria1.Entity = null;
					previousValue.TCategoria2.Remove(this);
				}
				this._TCategoria1.Entity = value;
				if ((value != null))
				{
					value.TCategoria2.Add(this);
					this._CategoriaPadre = value.CodCategoria;
				}
				else
				{
					this._CategoriaPadre = default(string);
				}
				this.SendPropertyChanged("TCategoria1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TCategoria2(TCategoria entity)
	{
		this.SendPropertyChanging();
		entity.TCategoria1 = this;
	}
	
	private void detach_TCategoria2(TCategoria entity)
	{
		this.SendPropertyChanging();
		entity.TCategoria1 = null;
	}
	
	private void attach_TProducto(TProducto entity)
	{
		this.SendPropertyChanging();
		entity.TCategoria = this;
	}
	
	private void detach_TProducto(TProducto entity)
	{
		this.SendPropertyChanging();
		entity.TCategoria = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TCliente")]
public partial class TCliente : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CodCliente;
	
	private string _Apellidos;
	
	private string _Nombres;
	
	private string _Direccion;
	
	private EntitySet<TBoleta> _TBoleta;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodClienteChanging(string value);
    partial void OnCodClienteChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    #endregion
	
	public TCliente()
	{
		this._TBoleta = new EntitySet<TBoleta>(new Action<TBoleta>(this.attach_TBoleta), new Action<TBoleta>(this.detach_TBoleta));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCliente", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CodCliente
	{
		get
		{
			return this._CodCliente;
		}
		set
		{
			if ((this._CodCliente != value))
			{
				this.OnCodClienteChanging(value);
				this.SendPropertyChanging();
				this._CodCliente = value;
				this.SendPropertyChanged("CodCliente");
				this.OnCodClienteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Apellidos
	{
		get
		{
			return this._Apellidos;
		}
		set
		{
			if ((this._Apellidos != value))
			{
				this.OnApellidosChanging(value);
				this.SendPropertyChanging();
				this._Apellidos = value;
				this.SendPropertyChanged("Apellidos");
				this.OnApellidosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Nombres
	{
		get
		{
			return this._Nombres;
		}
		set
		{
			if ((this._Nombres != value))
			{
				this.OnNombresChanging(value);
				this.SendPropertyChanging();
				this._Nombres = value;
				this.SendPropertyChanged("Nombres");
				this.OnNombresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Direccion
	{
		get
		{
			return this._Direccion;
		}
		set
		{
			if ((this._Direccion != value))
			{
				this.OnDireccionChanging(value);
				this.SendPropertyChanging();
				this._Direccion = value;
				this.SendPropertyChanged("Direccion");
				this.OnDireccionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCliente_TBoleta", Storage="_TBoleta", ThisKey="CodCliente", OtherKey="CodCliente")]
	public EntitySet<TBoleta> TBoleta
	{
		get
		{
			return this._TBoleta;
		}
		set
		{
			this._TBoleta.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBoleta(TBoleta entity)
	{
		this.SendPropertyChanging();
		entity.TCliente = this;
	}
	
	private void detach_TBoleta(TBoleta entity)
	{
		this.SendPropertyChanging();
		entity.TCliente = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TDetalle")]
public partial class TDetalle : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _NroBoleta;
	
	private string _CodProducto;
	
	private float _Cantidad;
	
	private float _PrecioUnitario;
	
	private EntityRef<TBoleta> _TBoleta;
	
	private EntityRef<TProducto> _TProducto;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNroBoletaChanging(string value);
    partial void OnNroBoletaChanged();
    partial void OnCodProductoChanging(string value);
    partial void OnCodProductoChanged();
    partial void OnCantidadChanging(float value);
    partial void OnCantidadChanged();
    partial void OnPrecioUnitarioChanging(float value);
    partial void OnPrecioUnitarioChanged();
    #endregion
	
	public TDetalle()
	{
		this._TBoleta = default(EntityRef<TBoleta>);
		this._TProducto = default(EntityRef<TProducto>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NroBoleta", DbType="VarChar(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string NroBoleta
	{
		get
		{
			return this._NroBoleta;
		}
		set
		{
			if ((this._NroBoleta != value))
			{
				if (this._TBoleta.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnNroBoletaChanging(value);
				this.SendPropertyChanging();
				this._NroBoleta = value;
				this.SendPropertyChanged("NroBoleta");
				this.OnNroBoletaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CodProducto
	{
		get
		{
			return this._CodProducto;
		}
		set
		{
			if ((this._CodProducto != value))
			{
				if (this._TProducto.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCodProductoChanging(value);
				this.SendPropertyChanging();
				this._CodProducto = value;
				this.SendPropertyChanged("CodProducto");
				this.OnCodProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Real NOT NULL")]
	public float Cantidad
	{
		get
		{
			return this._Cantidad;
		}
		set
		{
			if ((this._Cantidad != value))
			{
				this.OnCantidadChanging(value);
				this.SendPropertyChanging();
				this._Cantidad = value;
				this.SendPropertyChanged("Cantidad");
				this.OnCantidadChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioUnitario", DbType="Real NOT NULL")]
	public float PrecioUnitario
	{
		get
		{
			return this._PrecioUnitario;
		}
		set
		{
			if ((this._PrecioUnitario != value))
			{
				this.OnPrecioUnitarioChanging(value);
				this.SendPropertyChanging();
				this._PrecioUnitario = value;
				this.SendPropertyChanged("PrecioUnitario");
				this.OnPrecioUnitarioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBoleta_TDetalle", Storage="_TBoleta", ThisKey="NroBoleta", OtherKey="NroBoleta", IsForeignKey=true)]
	public TBoleta TBoleta
	{
		get
		{
			return this._TBoleta.Entity;
		}
		set
		{
			TBoleta previousValue = this._TBoleta.Entity;
			if (((previousValue != value) 
						|| (this._TBoleta.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBoleta.Entity = null;
					previousValue.TDetalle.Remove(this);
				}
				this._TBoleta.Entity = value;
				if ((value != null))
				{
					value.TDetalle.Add(this);
					this._NroBoleta = value.NroBoleta;
				}
				else
				{
					this._NroBoleta = default(string);
				}
				this.SendPropertyChanged("TBoleta");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProducto_TDetalle", Storage="_TProducto", ThisKey="CodProducto", OtherKey="CodProducto", IsForeignKey=true)]
	public TProducto TProducto
	{
		get
		{
			return this._TProducto.Entity;
		}
		set
		{
			TProducto previousValue = this._TProducto.Entity;
			if (((previousValue != value) 
						|| (this._TProducto.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TProducto.Entity = null;
					previousValue.TDetalle.Remove(this);
				}
				this._TProducto.Entity = value;
				if ((value != null))
				{
					value.TDetalle.Add(this);
					this._CodProducto = value.CodProducto;
				}
				else
				{
					this._CodProducto = default(string);
				}
				this.SendPropertyChanged("TProducto");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TProducto")]
public partial class TProducto : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CodProducto;
	
	private string _Nombre;
	
	private string _UnidadMedida;
	
	private float _Precio;
	
	private System.Nullable<int> _Stock;
	
	private string _CodCategoria;
	
	private EntitySet<TDetalle> _TDetalle;
	
	private EntityRef<TCategoria> _TCategoria;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodProductoChanging(string value);
    partial void OnCodProductoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnUnidadMedidaChanging(string value);
    partial void OnUnidadMedidaChanged();
    partial void OnPrecioChanging(float value);
    partial void OnPrecioChanged();
    partial void OnStockChanging(System.Nullable<int> value);
    partial void OnStockChanged();
    partial void OnCodCategoriaChanging(string value);
    partial void OnCodCategoriaChanged();
    #endregion
	
	public TProducto()
	{
		this._TDetalle = new EntitySet<TDetalle>(new Action<TDetalle>(this.attach_TDetalle), new Action<TDetalle>(this.detach_TDetalle));
		this._TCategoria = default(EntityRef<TCategoria>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodProducto", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CodProducto
	{
		get
		{
			return this._CodProducto;
		}
		set
		{
			if ((this._CodProducto != value))
			{
				this.OnCodProductoChanging(value);
				this.SendPropertyChanging();
				this._CodProducto = value;
				this.SendPropertyChanged("CodProducto");
				this.OnCodProductoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Nombre
	{
		get
		{
			return this._Nombre;
		}
		set
		{
			if ((this._Nombre != value))
			{
				this.OnNombreChanging(value);
				this.SendPropertyChanging();
				this._Nombre = value;
				this.SendPropertyChanged("Nombre");
				this.OnNombreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnidadMedida", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string UnidadMedida
	{
		get
		{
			return this._UnidadMedida;
		}
		set
		{
			if ((this._UnidadMedida != value))
			{
				this.OnUnidadMedidaChanging(value);
				this.SendPropertyChanging();
				this._UnidadMedida = value;
				this.SendPropertyChanged("UnidadMedida");
				this.OnUnidadMedidaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Real NOT NULL")]
	public float Precio
	{
		get
		{
			return this._Precio;
		}
		set
		{
			if ((this._Precio != value))
			{
				this.OnPrecioChanging(value);
				this.SendPropertyChanging();
				this._Precio = value;
				this.SendPropertyChanged("Precio");
				this.OnPrecioChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int")]
	public System.Nullable<int> Stock
	{
		get
		{
			return this._Stock;
		}
		set
		{
			if ((this._Stock != value))
			{
				this.OnStockChanging(value);
				this.SendPropertyChanging();
				this._Stock = value;
				this.SendPropertyChanged("Stock");
				this.OnStockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodCategoria", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
	public string CodCategoria
	{
		get
		{
			return this._CodCategoria;
		}
		set
		{
			if ((this._CodCategoria != value))
			{
				if (this._TCategoria.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCodCategoriaChanging(value);
				this.SendPropertyChanging();
				this._CodCategoria = value;
				this.SendPropertyChanged("CodCategoria");
				this.OnCodCategoriaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TProducto_TDetalle", Storage="_TDetalle", ThisKey="CodProducto", OtherKey="CodProducto")]
	public EntitySet<TDetalle> TDetalle
	{
		get
		{
			return this._TDetalle;
		}
		set
		{
			this._TDetalle.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TCategoria_TProducto", Storage="_TCategoria", ThisKey="CodCategoria", OtherKey="CodCategoria", IsForeignKey=true)]
	public TCategoria TCategoria
	{
		get
		{
			return this._TCategoria.Entity;
		}
		set
		{
			TCategoria previousValue = this._TCategoria.Entity;
			if (((previousValue != value) 
						|| (this._TCategoria.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TCategoria.Entity = null;
					previousValue.TProducto.Remove(this);
				}
				this._TCategoria.Entity = value;
				if ((value != null))
				{
					value.TProducto.Add(this);
					this._CodCategoria = value.CodCategoria;
				}
				else
				{
					this._CodCategoria = default(string);
				}
				this.SendPropertyChanged("TCategoria");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TDetalle(TDetalle entity)
	{
		this.SendPropertyChanging();
		entity.TProducto = this;
	}
	
	private void detach_TDetalle(TDetalle entity)
	{
		this.SendPropertyChanging();
		entity.TProducto = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TVendedor")]
public partial class TVendedor : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _CodVendedor;
	
	private string _Apellidos;
	
	private string _Nombres;
	
	private EntitySet<TBoleta> _TBoleta;
	
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodVendedorChanging(string value);
    partial void OnCodVendedorChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    #endregion
	
	public TVendedor()
	{
		this._TBoleta = new EntitySet<TBoleta>(new Action<TBoleta>(this.attach_TBoleta), new Action<TBoleta>(this.detach_TBoleta));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodVendedor", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CodVendedor
	{
		get
		{
			return this._CodVendedor;
		}
		set
		{
			if ((this._CodVendedor != value))
			{
				this.OnCodVendedorChanging(value);
				this.SendPropertyChanging();
				this._CodVendedor = value;
				this.SendPropertyChanged("CodVendedor");
				this.OnCodVendedorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Apellidos
	{
		get
		{
			return this._Apellidos;
		}
		set
		{
			if ((this._Apellidos != value))
			{
				this.OnApellidosChanging(value);
				this.SendPropertyChanging();
				this._Apellidos = value;
				this.SendPropertyChanged("Apellidos");
				this.OnApellidosChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Nombres
	{
		get
		{
			return this._Nombres;
		}
		set
		{
			if ((this._Nombres != value))
			{
				this.OnNombresChanging(value);
				this.SendPropertyChanging();
				this._Nombres = value;
				this.SendPropertyChanged("Nombres");
				this.OnNombresChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TVendedor_TBoleta", Storage="_TBoleta", ThisKey="CodVendedor", OtherKey="CodVendedor")]
	public EntitySet<TBoleta> TBoleta
	{
		get
		{
			return this._TBoleta;
		}
		set
		{
			this._TBoleta.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBoleta(TBoleta entity)
	{
		this.SendPropertyChanging();
		entity.TVendedor = this;
	}
	
	private void detach_TBoleta(TBoleta entity)
	{
		this.SendPropertyChanging();
		entity.TVendedor = null;
	}
}
#pragma warning restore 1591
